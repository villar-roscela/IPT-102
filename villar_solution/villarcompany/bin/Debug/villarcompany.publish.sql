/*
Deployment script for villarcompany

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "villarcompany"
:setvar DefaultFilePrefix "villarcompany"
:setvar DefaultDataPath "C:\Users\Marivic Sarmiento\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Marivic Sarmiento\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[aEmployee]...';


GO
CREATE TABLE [dbo].[aEmployee] (
    [Fname]     VARCHAR (15)    NOT NULL,
    [Minit]     CHAR (9)        NULL,
    [Lname]     VARCHAR (15)    NOT NULL,
    [Ssn]       CHAR (9)        NOT NULL,
    [Bdate]     DATE            NULL,
    [Address]   VARCHAR (50)    NOT NULL,
    [Sex]       CHAR (1)        NULL,
    [Salary]    DECIMAL (10, 2) NULL,
    [Super_ssn] CHAR (9)        NULL,
    [Dno]       INT             NOT NULL,
    CONSTRAINT [PK_aEmployee_Ssn] PRIMARY KEY CLUSTERED ([Ssn] ASC)
);


GO
PRINT N'Creating Index [dbo].[aEmployee].[PK_aEmployee_Name]...';


GO
CREATE NONCLUSTERED INDEX [PK_aEmployee_Name]
    ON [dbo].[aEmployee]([Fname] ASC, [Lname] ASC);


GO
PRINT N'Creating Table [dbo].[bDepartment]...';


GO
CREATE TABLE [dbo].[bDepartment] (
    [Dname]          VARCHAR (15) NOT NULL,
    [Dnumber]        INT          NOT NULL,
    [Mgr_ssn]        CHAR (9)     NOT NULL,
    [Mgr_start_date] DATE         NULL,
    CONSTRAINT [PK_bDepartment_Dnumber] PRIMARY KEY CLUSTERED ([Dnumber] ASC),
    CONSTRAINT [UN_bDepartment_Dname] UNIQUE NONCLUSTERED ([Dname] ASC)
);


GO
PRINT N'Creating Index [dbo].[bDepartment].[IX_bDepartment_Dnumber]...';


GO
CREATE NONCLUSTERED INDEX [IX_bDepartment_Dnumber]
    ON [dbo].[bDepartment]([Dnumber] ASC);


GO
PRINT N'Creating Index [dbo].[bDepartment].[UX_bDepartment_Dname]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [UX_bDepartment_Dname]
    ON [dbo].[bDepartment]([Dname] ASC);


GO
PRINT N'Creating Table [dbo].[cProject]...';


GO
CREATE TABLE [dbo].[cProject] (
    [Pname]     VARCHAR (15) NOT NULL,
    [Pnumber]   INT          NOT NULL,
    [Plocation] VARCHAR (15) NULL,
    [Dnum]      INT          NOT NULL,
    CONSTRAINT [PK_Project_Pnumber] PRIMARY KEY CLUSTERED ([Pnumber] ASC),
    CONSTRAINT [UN_Project_Pname] UNIQUE NONCLUSTERED ([Pname] ASC)
);


GO
PRINT N'Creating Index [dbo].[cProject].[IX_Project_Name]...';


GO
CREATE NONCLUSTERED INDEX [IX_Project_Name]
    ON [dbo].[cProject]([Pname] ASC);


GO
PRINT N'Creating Table [dbo].[dDependent]...';


GO
CREATE TABLE [dbo].[dDependent] (
    [Essn]           CHAR (9)     NOT NULL,
    [Dependent_name] VARCHAR (15) NOT NULL,
    [Sex]            CHAR (1)     NULL,
    [Bdate]          DATE         NULL,
    [Relationship]   VARCHAR (9)  NULL,
    CONSTRAINT [PK_Dependent_Name_Essn] PRIMARY KEY CLUSTERED ([Essn] ASC, [Dependent_name] ASC)
);


GO
PRINT N'Creating Index [dbo].[dDependent].[IX_Dependent_Relatioship]...';


GO
CREATE NONCLUSTERED INDEX [IX_Dependent_Relatioship]
    ON [dbo].[dDependent]([Relationship] ASC);


GO
PRINT N'Creating Table [dbo].[eDept-location]...';


GO
CREATE TABLE [dbo].[eDept-location] (
    [Dnumber]   INT          NOT NULL,
    [Dlocation] VARCHAR (15) NOT NULL,
    CONSTRAINT [PK_Dlocation_Dnumber] PRIMARY KEY CLUSTERED ([Dnumber] ASC, [Dlocation] ASC)
);


GO
PRINT N'Creating Index [dbo].[eDept-location].[IX_Deptlocation_number]...';


GO
CREATE NONCLUSTERED INDEX [IX_Deptlocation_number]
    ON [dbo].[eDept-location]([Dnumber] ASC);


GO
PRINT N'Creating Index [dbo].[eDept-location].[IX_Dept_location]...';


GO
CREATE NONCLUSTERED INDEX [IX_Dept_location]
    ON [dbo].[eDept-location]([Dlocation] ASC);


GO
PRINT N'Creating Table [dbo].[fWorks_On]...';


GO
CREATE TABLE [dbo].[fWorks_On] (
    [Essn]  CHAR (9)       NOT NULL,
    [Pno]   INT            NOT NULL,
    [Hours] DECIMAL (3, 1) NOT NULL,
    CONSTRAINT [PK_Works_Essn, Pno] PRIMARY KEY CLUSTERED ([Essn] ASC, [Pno] ASC)
);


GO
PRINT N'Creating Index [dbo].[fWorks_On].[IX_Works_Number]...';


GO
CREATE NONCLUSTERED INDEX [IX_Works_Number]
    ON [dbo].[fWorks_On]([Pno] ASC);


GO
PRINT N'Creating Foreign Key [dbo].[FK_bDepartment_Mgr_ssn]...';


GO
ALTER TABLE [dbo].[bDepartment] WITH NOCHECK
    ADD CONSTRAINT [FK_bDepartment_Mgr_ssn] FOREIGN KEY ([Mgr_ssn]) REFERENCES [dbo].[aEmployee] ([Ssn]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Project_Dnum]...';


GO
ALTER TABLE [dbo].[cProject] WITH NOCHECK
    ADD CONSTRAINT [FK_Project_Dnum] FOREIGN KEY ([Dnum]) REFERENCES [dbo].[bDepartment] ([Dnumber]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Dependent_Ssn]...';


GO
ALTER TABLE [dbo].[dDependent] WITH NOCHECK
    ADD CONSTRAINT [FK_Dependent_Ssn] FOREIGN KEY ([Essn]) REFERENCES [dbo].[aEmployee] ([Ssn]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Dlocation_location]...';


GO
ALTER TABLE [dbo].[eDept-location] WITH NOCHECK
    ADD CONSTRAINT [FK_Dlocation_location] FOREIGN KEY ([Dnumber]) REFERENCES [dbo].[bDepartment] ([Dnumber]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Works_Essn]...';


GO
ALTER TABLE [dbo].[fWorks_On] WITH NOCHECK
    ADD CONSTRAINT [FK_Works_Essn] FOREIGN KEY ([Essn]) REFERENCES [dbo].[aEmployee] ([Ssn]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Worls_Pno]...';


GO
ALTER TABLE [dbo].[fWorks_On] WITH NOCHECK
    ADD CONSTRAINT [FK_Worls_Pno] FOREIGN KEY ([Pno]) REFERENCES [dbo].[cProject] ([Pnumber]);


GO
PRINT N'Creating Procedure [dbo].[Create]...';


GO
CREATE PROCEDURE [dbo].[Create]
    @Fname VARCHAR(15), 
    @Minit CHAR(10), 
    @Lname VARCHAR(15), 
    @Ssn CHAR(9), 
    @Bdate NVARCHAR(50), 
    @Address VARCHAR, 
    @Sex CHAR, 
    @Salary DECIMAL, 
    @Super_ssn CHAR, 
    @Dno INT


AS
BEGIN
INSERT aEmployee (Fname,Minit,Lname,Ssn,Bdate,Address,Sex,Salary,Super_ssn,Dno)
VALUES( @Fname,@Minit,@Lname,@Ssn,@Bdate,@Address,@Sex,@Salary,@Super_ssn,@Dno)
END
GO
PRINT N'Creating Procedure [dbo].[Delete]...';


GO
CREATE PROCEDURE [dbo].[Delete]

     @Ssn CHAR(9)
AS
BEGIN
Delete from aEmployee Where Ssn = @Ssn
END
GO
PRINT N'Creating Procedure [dbo].[Read]...';


GO
CREATE PROCEDURE [dbo].[Read]
	
		@Find VARCHAR(50)
AS
BEGIN
Select * from aEmployee
Where Minit like @Find or Lname like @Find or Ssn like @Find or Bdate like @Find
or Address like @Find or Sex like @Find or Salary like @Find or Super_ssn like @Find or Dno like @Find
END
GO
PRINT N'Creating Procedure [dbo].[Update]...';


GO
CREATE PROCEDURE [dbo].[Update]
	
	  @Fname VARCHAR(15), 
    @Minit CHAR(10), 
    @Lname VARCHAR(15), 
    @Ssn CHAR(9), 
    @Bdate NVARCHAR(50), 
    @Address VARCHAR, 
    @Sex CHAR, 
    @Salary DECIMAL, 
    @Super_ssn CHAR, 
    @Dno INT

AS
BEGIN
Update aEmployee
Set  Fname =  @Fname,
     Minit = @Minit,
     Lname = @Lname,
     Ssn   = @Ssn,
     Bdate = @Bdate,
     Address = @Address,
     Sex = @Sex,
     Salary = @Salary,
     Super_ssn = @Super_ssn,
     Dno = @Dno
Where Ssn = @Ssn
END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[bDepartment] WITH CHECK CHECK CONSTRAINT [FK_bDepartment_Mgr_ssn];

ALTER TABLE [dbo].[cProject] WITH CHECK CHECK CONSTRAINT [FK_Project_Dnum];

ALTER TABLE [dbo].[dDependent] WITH CHECK CHECK CONSTRAINT [FK_Dependent_Ssn];

ALTER TABLE [dbo].[eDept-location] WITH CHECK CHECK CONSTRAINT [FK_Dlocation_location];

ALTER TABLE [dbo].[fWorks_On] WITH CHECK CHECK CONSTRAINT [FK_Works_Essn];

ALTER TABLE [dbo].[fWorks_On] WITH CHECK CHECK CONSTRAINT [FK_Worls_Pno];


GO
PRINT N'Update complete.';


GO
